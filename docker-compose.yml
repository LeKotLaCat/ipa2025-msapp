services:
  web:
    build: ./web
    ports:
      - "8080:8080"
    depends_on:
      - mongo
    networks:
      - app-net
    env_file:
      - .env
    environment:
      MONGO_URI: "mongodb://${MONGO_USERNAME}:${MONGO_PASSWORD}@mongo:27017/"
      #DB_NAME: "IPA_LAB7_Docker_MongoDB"
      DB_NAME: "ipa2025_db"

  mongo:
    image: mongo:6
    ports:
      - "27017:27017"
    volumes:
      - mongo-data:/data/db
    networks:
      - app-net
    env_file:
      - .env
    #health check sequence
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongosh localhost:27017/test --quiet
      interval: 10s
      timeout: 10s
      retries: 5
      start_period: 40s

  rabbitmq:
    image: rabbitmq:3-management
    ports:
      - "5672:5672"
      - "15672:15672"
    networks:
      - app-net
    healthcheck:
      test: rabbitmq-diagnostics -q ping
      interval: 30s
      timeout: 30s
      retries: 3
    
  scheduler:
    build: ./scheduler
    networks:
      - app-net
    depends_on:
      rabbitmq:
        condition: service_healthy
      mongo:
        condition: service_healthy
    env_file:
      - .env
    environment:
      - MONGO_URI=mongodb://admin:khaow@mongo:27017/
      - DB_NAME=ipa2025_db
      - PYTHONUNBUFFERED=1

  worker:
    build: ./worker
    networks:
      - app-net
    deploy:
      replicas: 3
    depends_on:
      rabbitmq:
        condition: service_healthy
      mongo:
        condition: service_healthy
    env_file:
      - .env
    environment:
      - PYTHONUNBUFFERED=1
      - MONGO_URI=mongodb://admin:khaow@mongo:27017/
      - DB_NAME=ipa2025_db

volumes:
  mongo-data:
    
networks:
  app-net:
